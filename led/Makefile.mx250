#
# Copyright (C) 2014-2015 Darron Broad
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# 3. Neither the name `Darron Broad' nor the names of any contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

PLATFORM := MX250

CPU     := 32MX250F128B
LKR1	:= lib/chipKIT-application-32MX250F128.ld
LKR2	:= lib/chipKIT-application-COMMON.ld

HEAP    := 20480
STACK   := 4096

PIC32   := /opt/pic32-tools

COMPILE := $(PIC32)/bin/pic32-

AS      := $(COMPILE)as
LD      := $(COMPILE)ld
CC      := $(COMPILE)gcc
AR      := $(COMPILE)ar
NM      := $(COMPILE)nm
HX      := $(COMPILE)bin2hex
STRIP   := $(COMPILE)strip
OBJCOPY := $(COMPILE)objcopy
OBJDUMP := $(COMPILE)objdump

RM      := /bin/rm

TARGET  := mx250.hex

SOURCE  := led.c
HEADER  := $(SOURCE:.c=.h)

OBJECT  := $(SOURCE:.c=.o)
OBJECT  := $(foreach F,$(OBJECT),$(PLATFORM)/$(F))

ELF     := $(PLATFORM)/$(TARGET:.hex=.elf)
MAP     := $(PLATFORM)/$(TARGET:.hex=.map)

CFLAGS  := -mprocessor=$(CPU) -DLED_$(PLATFORM) -mips16 -Os -fverbose-asm -save-temps=obj -mdebugger
CLINK   := -mno-peripheral-libs -Wl,-T$(LKR1),-T$(LKR2),-Map=$(MAP),--gc-sections,--defsym,_min_heap_size=$(HEAP),--defsym,_min_stack_size=$(STACK)

# <plib.h> either use -fgnu89-inline for gcc or --allow-multiple-definition for ld
CFLAGS  += -fgnu89-inline

# MPIDE avrdude
AVRDUDE := /opt/mpide-0150-raspberrypi-20150820/hardware/tools/avrdude
AVRCONF := /opt/mpide-0150-raspberrypi-20150820/hardware/tools/avrdude.conf

ifneq (,$(wildcard $(PIC32)))
build:		init $(TARGET)
else
build:
$(warning $(PIC32) unavailable)
endif

init:
		@mkdir -p $(PLATFORM)

$(TARGET):$(ELF)
		$(HX) $(ELF)
		mv $(PLATFORM)/$(TARGET) $(TARGET)

$(ELF):		$(OBJECT)
		$(CC) $(CFLAGS) $(CPPFLAGS) $(OBJECT) -o $(ELF) $(CLINK)

$(OBJECT):	$(HEADER) Makefile.mx250 $(LKR1) $(LKR2)

install:	build

program:	build
		pload program /dev/ttyAMA0 $(TARGET) 24

avrdude:	build
		$(AVRDUDE) -C $(AVRCONF) -p pic32-250-128-B -V -D -P /dev/ttyAMA0 -b 115200 -c stk500v2 -U flash:w:$(TARGET)

pic32prog:	build
		pic32prog -d /dev/ttyAMA0 -b 115200 $(TARGET)

verify:		build

clean:
		rm -Rf $(PLATFORM)
		rm -f $(TARGET)

$(PLATFORM)/%.o:%.c
		$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@
